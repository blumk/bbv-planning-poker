/**
* This is an autogenerated file created by the Stencil compiler.
* It contains typing information for all components that exist in this project.
*/
/* tslint:disable */

import '@stencil/core';

import '@ionic/core';
import 'ionicons';


export namespace Components {

  interface BbvPlanningPoker {}
  interface BbvPlanningPokerAttributes extends StencilHTMLAttributes {}

  interface PageCardDetail {
    'id': string;
  }
  interface PageCardDetailAttributes extends StencilHTMLAttributes {
    'id'?: string;
  }

  interface PageCardOverview {}
  interface PageCardOverviewAttributes extends StencilHTMLAttributes {}

  interface PageSettings {}
  interface PageSettingsAttributes extends StencilHTMLAttributes {}

  interface PokerCardDeck {}
  interface PokerCardDeckAttributes extends StencilHTMLAttributes {}

  interface PokerCard {
    'color': string;
  }
  interface PokerCardAttributes extends StencilHTMLAttributes {
    'color'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'BbvPlanningPoker': Components.BbvPlanningPoker;
    'PageCardDetail': Components.PageCardDetail;
    'PageCardOverview': Components.PageCardOverview;
    'PageSettings': Components.PageSettings;
    'PokerCardDeck': Components.PokerCardDeck;
    'PokerCard': Components.PokerCard;
  }

  interface StencilIntrinsicElements {
    'bbv-planning-poker': Components.BbvPlanningPokerAttributes;
    'page-card-detail': Components.PageCardDetailAttributes;
    'page-card-overview': Components.PageCardOverviewAttributes;
    'page-settings': Components.PageSettingsAttributes;
    'poker-card-deck': Components.PokerCardDeckAttributes;
    'poker-card': Components.PokerCardAttributes;
  }


  interface HTMLBbvPlanningPokerElement extends Components.BbvPlanningPoker, HTMLStencilElement {}
  var HTMLBbvPlanningPokerElement: {
    prototype: HTMLBbvPlanningPokerElement;
    new (): HTMLBbvPlanningPokerElement;
  };

  interface HTMLPageCardDetailElement extends Components.PageCardDetail, HTMLStencilElement {}
  var HTMLPageCardDetailElement: {
    prototype: HTMLPageCardDetailElement;
    new (): HTMLPageCardDetailElement;
  };

  interface HTMLPageCardOverviewElement extends Components.PageCardOverview, HTMLStencilElement {}
  var HTMLPageCardOverviewElement: {
    prototype: HTMLPageCardOverviewElement;
    new (): HTMLPageCardOverviewElement;
  };

  interface HTMLPageSettingsElement extends Components.PageSettings, HTMLStencilElement {}
  var HTMLPageSettingsElement: {
    prototype: HTMLPageSettingsElement;
    new (): HTMLPageSettingsElement;
  };

  interface HTMLPokerCardDeckElement extends Components.PokerCardDeck, HTMLStencilElement {}
  var HTMLPokerCardDeckElement: {
    prototype: HTMLPokerCardDeckElement;
    new (): HTMLPokerCardDeckElement;
  };

  interface HTMLPokerCardElement extends Components.PokerCard, HTMLStencilElement {}
  var HTMLPokerCardElement: {
    prototype: HTMLPokerCardElement;
    new (): HTMLPokerCardElement;
  };

  interface HTMLElementTagNameMap {
    'bbv-planning-poker': HTMLBbvPlanningPokerElement
    'page-card-detail': HTMLPageCardDetailElement
    'page-card-overview': HTMLPageCardOverviewElement
    'page-settings': HTMLPageSettingsElement
    'poker-card-deck': HTMLPokerCardDeckElement
    'poker-card': HTMLPokerCardElement
  }

  interface ElementTagNameMap {
    'bbv-planning-poker': HTMLBbvPlanningPokerElement;
    'page-card-detail': HTMLPageCardDetailElement;
    'page-card-overview': HTMLPageCardOverviewElement;
    'page-settings': HTMLPageSettingsElement;
    'poker-card-deck': HTMLPokerCardDeckElement;
    'poker-card': HTMLPokerCardElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
